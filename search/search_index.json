{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>Welcome to Dirk Petersen's documentation site. This is a comprehensive guide to the tools, platforms, and configurations used in this workflow.</p>"},{"location":"#topics","title":"Topics","text":"<ul> <li>Claude Code - AI-powered development workflow and integration</li> <li>WSL - Windows Subsystem for Linux setup and configuration</li> <li>AWS - Cloud infrastructure and services</li> <li>Nvidia - GPU acceleration and compute setup</li> </ul>"},{"location":"#about","title":"About","text":"<p>This documentation is designed for anyone wanting to understand, replicate, or work with Dirk Petersen's development environment and configurations. Each section provides practical guides and best practices for working with these technologies.</p>"},{"location":"aws/","title":"Amazon Web Services (AWS)","text":"<p>Cloud infrastructure and services configuration guide.</p>"},{"location":"aws/#overview","title":"Overview","text":"<p>AWS provides scalable cloud computing services. This section covers the services, configurations, and best practices used in this workflow.</p>"},{"location":"aws/#contents","title":"Contents","text":"<ul> <li>AWS account setup and configuration</li> <li>Core services overview</li> <li>Infrastructure as Code</li> </ul> <p>More content coming soon...</p>"},{"location":"claude-code/","title":"Claude Code","text":"<p>Documentation for Claude Code, an AI-powered development tool integrated into this workflow.</p>"},{"location":"claude-code/#overview","title":"Overview","text":"<p>Claude Code provides AI-assisted development capabilities for code generation, analysis, and problem-solving. This setup uses AWS Bedrock for model inference, enabling local-first Claude Code execution.</p>"},{"location":"claude-code/#setup","title":"Setup","text":""},{"location":"claude-code/#1-configure-aws-credentials","title":"1. Configure AWS Credentials","text":"<p>Add your AWS credentials to <code>~/.aws/credentials</code>:</p> <pre><code>[bedrock]\naws_access_key_id = XXXXXXXXXXX\naws_secret_access_key = YYYYYYYYYYYYYYYYY\n</code></pre>"},{"location":"claude-code/#2-configure-aws-region","title":"2. Configure AWS Region","text":"<p>Add the Bedrock profile to <code>~/.aws/config</code>:</p> <pre><code>[profile bedrock]\nregion = us-west-2\n</code></pre>"},{"location":"claude-code/#3-install-claude-code","title":"3. Install Claude Code","text":"<p>Install Claude Code globally via npm:</p> <pre><code>npm i -g @anthropic-ai/claude-code\n</code></pre>"},{"location":"claude-code/#4-create-wrapper-script","title":"4. Create Wrapper Script","text":"<p>Create a wrapper script at <code>~/bin/claude</code> to simplify usage:</p> <pre><code>#! /bin/bash\n\nexport CLAUDE_CODE_USE_BEDROCK=1\n\nexport AWS_REGION=us-west-2\nexport AWS_PROFILE=bedrock\nexport ANTHROPIC_MODEL=\"anthropic.claude-sonnet-4-5-20250929-v1:0\"\nexport ANTHROPIC_SMALL_FAST_MODEL=\"us.anthropic.claude-haiku-4-5-20251001-v1:0\"\n\nmymodel=${ANTHROPIC_SMALL_FAST_MODEL}\nif [[ \"$1\" == \"opus\" ]]; then\n  mymodel=$1\nelif [[ \"$1\" == \"sonnet\" ]]; then\n  mymodel=\"anthropic.claude-sonnet-4-5-20250929-v1:0\"\nfi\n\n~/.claude/local/claude --dangerously-skip-permissions --model $mymodel $@\n</code></pre> <p>Make it executable:</p> <pre><code>chmod +x ~/bin/claude\n</code></pre>"},{"location":"claude-code/#usage","title":"Usage","text":""},{"location":"claude-code/#default-haiku-fast","title":"Default (Haiku - Fast)","text":"<p>Run Claude Code with the default fast Haiku model:</p> <pre><code>claude /path/to/project\n</code></pre>"},{"location":"claude-code/#sonnet-balanced","title":"Sonnet (Balanced)","text":"<p>Run with the more capable Sonnet model:</p> <pre><code>claude sonnet /path/to/project\n</code></pre>"},{"location":"claude-code/#opus-most-capable","title":"Opus (Most Capable)","text":"<p>Run with the most capable Opus model:</p> <pre><code>claude opus /path/to/project\n</code></pre>"},{"location":"claude-code/#configuration-notes","title":"Configuration Notes","text":"<ul> <li>Bedrock Integration: Uses AWS Bedrock for model inference</li> <li>Context Window: Defaults to 1M context window for Sonnet</li> <li>No Confirmation: Configured to skip permission prompts for streamlined workflow</li> <li>Model Selection: Easy switching between Haiku (fast), Sonnet (balanced), and Opus (capable)</li> </ul>"},{"location":"claude-code/#tips-and-best-practices","title":"Tips and Best Practices","text":"<ul> <li>Use Haiku for quick fixes and simple tasks</li> <li>Use Sonnet for complex development and analysis</li> <li>Use Opus for challenging problems requiring maximum capability</li> <li>Ensure AWS credentials are properly configured before use</li> <li>The wrapper script automatically handles model selection and AWS environment setup</li> </ul>"},{"location":"nvidia/","title":"Nvidia","text":"<p>GPU acceleration and compute setup guide.</p>"},{"location":"nvidia/#overview","title":"Overview","text":"<p>Nvidia GPUs provide hardware acceleration for compute-intensive workloads. This section covers setup, driver configuration, and optimization.</p>"},{"location":"nvidia/#contents","title":"Contents","text":"<ul> <li>Nvidia driver installation</li> <li>CUDA toolkit setup</li> <li>GPU optimization and monitoring</li> </ul> <p>More content coming soon...</p>"},{"location":"wsl/","title":"Windows Subsystem for Linux (WSL)","text":"<p>Setup and configuration guide for Windows Subsystem for Linux.</p>"},{"location":"wsl/#overview","title":"Overview","text":"<p>WSL enables running a Linux environment directly on Windows, providing a native Linux development experience without dual-boot or virtualization overhead.</p>"},{"location":"wsl/#contents","title":"Contents","text":"<ul> <li>WSL installation and setup</li> <li>Distribution configuration</li> <li>Development environment configuration</li> </ul> <p>More content coming soon...</p>"}]}